set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/vimfiles/bundle/Vundle.vim
"call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
call vundle#begin('~/vimfiles/bundle')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Additional plugins
Plugin 'tpope/vim-sensible'
Plugin 'vim-scripts/taglist.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'majutsushi/tagbar'
" Plugin 'Valloric/YouCompleteMe'
Plugin 'flazz/vim-colorschemes'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

"General vim settings

syntax on
set guifont=Hack:h9:cANSI

if has("gui_running")
	"colorscheme solarized
	"----------------------------------------------------------------
	" Solarized Colorscheme Config
	"let g:solarized_contrast="high"    "default value is normal
	"let g:solarized_visibility="high"    "default value is normal
	syntax enable
	"set background=light
	"colorscheme solarized
	"----------------------------------------------------------------
	"set guifont=Hack:h9:cANSI
	"set guifont=Courier_New:h11:cANSI
	"set guioptions-=m  "remove menu bar
	"set guioptions-=T  "remove toolbar
	"set guioptions-=r  "remove right-hand scroll bar
	"set guioptions-=L  "remove left-hand scroll bar
endif

if has("multi_byte")
  if &termencoding == ""
    let &termencoding = &encoding
  endif
  set encoding=utf-8
  setglobal fileencoding=utf-8
  "setglobal bomb
  set fileencodings=ucs-bom,utf-8,latin1
endif

set encoding=utf-8
set incsearch
set hlsearch
set ai
set ruler
set number
"set relativenumber
set laststatus=2
"set ic "ignorecase
set smartcase
set smartindent
set tags=tags;
set noswapfile
"set cursorline
set splitright
set splitbelow
set comments=sl:/*,mb:**,elx:*/
set tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
set listchars=tab:?\ ,eol:Â¬
"set list

" include paths
set path=D:/Gen3/systems/repo/trunk/QNX_SDK/target/qnx6/usr/include/
set path+=$PWD/**

" autocmd
autocmd FileType qf wincmd J



" Tlist toggle on the right
let Tlist_Use_Right_Window=1

" set the leader key
let mapleader=";"
" map F12 to toggle Tlist - Symbols from the current file
" nnoremap <F12> :TlistToggle<CR>
" map F3 to open file under cursor
" nnoremap <F3> <C-W>gf
" map ;f to find the file in NERDTree
" map <leader>f :NERDTreeFind<CR>

" For Gen2 specific
" cs add c:\Zephyr_MAINLINE\cscope.out

if has('cscope')
  set nocscopeverbose
  cs add cscope.out
  "set cscopetag 
  "set cscopeverbose
  set csto=1

  if has('quickfix')
    set cscopequickfix=s-,c-,d-,i-,t-,e-
  endif
":colder to go to previous quickfix list
"

  cnoreabbrev csa cs add
  cnoreabbrev csf cs find
  cnoreabbrev csk cs kill
  cnoreabbrev csr cs reset
  cnoreabbrev css cs show
  cnoreabbrev csh cs help

  "command -nargs=0 Cscope cs add $VIMSRC/src/cscope.out $VIMSRC/src
endif

function! SuperCleverTab()
    if strpart(getline('.'), 0, col('.') - 1) =~ '^\s*$'
        return "\<Tab>"
    else
        if &omnifunc != ''
            return "\<C-X>\<C-O>"
        elseif &dictionary != ''
            return "\<C-K>"
        else
            return "\<C-N>"
        endif
    endif
endfunction

"inoremap <Tab> <C-R>=SuperCleverTab()<cr>

nmap <C-\>s :cs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>c :cs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>t :cs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>e :cs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-\>d :cs find d <C-R>=expand("<cword>")<CR><CR>

" Using 'CTRL-spacebar' then a search type makes the vim window
" split horizontally, with search result displayed in
" the new window.

nmap <C-Space>s :scs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>g :scs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>c :scs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>t :scs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>e :scs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space>f :scs find f <C-R>=expand("<cfile>")<CR><CR>
nmap <C-Space>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-Space>d :scs find d <C-R>=expand("<cword>")<CR><CR>

" Hitting CTRL-space *twice* before the search type does a vertical
" split instead of a horizontal one

nmap <C-Space><C-Space>s
	\:vert scs find s <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>g
	\:vert scs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>c
	\:vert scs find c <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>t
	\:vert scs find t <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>e
	\:vert scs find e <C-R>=expand("<cword>")<CR><CR>
nmap <C-Space><C-Space>i
	\:vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>
nmap <C-Space><C-Space>d
	\:vert scs find d <C-R>=expand("<cword>")<CR><CR>


"mappings
map   <F1>   :exec("tag ".expand("<cword>"))<CR>
map   <F2>   :pop<cr>
nmap  <F3> *N
nmap  <F4> %
nmap  <F5> :NERDTreeToggle<CR>
map   <F6> :NERDTreeFind<CR>
map   <F8> :Tagbar<CR> 
map   <F11> <Esc>:call libcallnr("gvimfullscreen.dll", "ToggleFullScreen", 0)<CR>
map   <F12> :TlistToggle<CR> 

"nmap <2-LeftMouse> *N

let g:NERDTreeMapActivateNode="<F3>"
let g:NERDTreeMapPreview="<F4>"

"YouCompleteMe ??
"let g:ycm_global_ycm_extra_conf = 'c:\users\yadavij\vimfiles\bundle\YouCompleteMe\third_party\ycmd\cpp\ycm\.ycm_extra_conf.py'
let g:ycm_collect_identifiers_from_tags_files = 1


let g:airline_powerline_fonts = 1
let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme = 'papercolor'

let Tlist_Show_One_File=1
